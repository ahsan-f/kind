name: Kubernetes Kind CI Test

on: [push, pull_request]

jobs:
  kind-test:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4 
        
      # ----------------------------------------------
      # 1. Cluster Setup
      # ----------------------------------------------
      - name: üõ† Setup Kind Cluster
        uses: helm/kind-action@v1 

      # ----------------------------------------------
      # 2. Deployment
      # ----------------------------------------------
      - name: üöÄ Apply Deployment Manifest
        run: kubectl apply -f deployment.yaml

      - name: ‚úÖ Wait for Deployment Rollout
        run: kubectl rollout status deployment/ci-test-deployment --timeout=5m

      - name: üîç Get NodePort for Service
        id: get_port
        run: |
          NODE_PORT=$(kubectl get svc ci-test-service -o=jsonpath='{.spec.ports[0].nodePort}')
          echo "NODE_PORT=$NODE_PORT" >> $GITHUB_OUTPUT
          echo "Service exposed on NodePort: $NODE_PORT"
          
      - name: üîé Debug: Check Pods and Service Status üëà NEW STEP
        # This will provide critical output if the curl fails again
        run: |
          echo "--- PODS STATUS ---"
          kubectl get pods -o wide
          echo "--- SERVICE DESCRIPTION (ci-test-service) ---"
          kubectl describe service ci-test-service
          echo "--- DEPLOYMENT STATUS (ci-test-deployment) ---"
          kubectl describe deployment ci-test-deployment

      # ----------------------------------------------
      # 3. Robust Testing (with Increased Retry)
      # ----------------------------------------------
      - name: üß™ Test Application Endpoint with Retry
        run: |
          NODE_PORT=${{ steps.get_port.outputs.NODE_PORT }}
          
          # Increased tolerance for slow startup
          MAX_RETRIES=12  
          RETRY_DELAY=10 
          
          URL="http://127.0.0.1:$NODE_PORT"
          RETRY_COUNT=0
          
          echo "Starting robust connection check to $URL..."

          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            echo "Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES: Curling $URL"
            
            # Use curl to get ONLY the HTTP status code
            STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            
            if [ "$STATUS_CODE" == "200" ]; then
              echo "‚úÖ Success! Received HTTP 200 OK from $URL"
              exit 0 
            else
              echo "‚ùå Received status code $STATUS_CODE (Expected 200). Retrying in $RETRY_DELAY seconds..."
              RETRY_COUNT=$((RETRY_COUNT + 1))
              sleep $RETRY_DELAY
            fi
          done

          echo "üö® Error: Application failed to become available after $MAX_RETRIES attempts."
          exit 1
